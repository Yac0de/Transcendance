version: '3.9'

services:
  # PostgreSQL database service

  db:
    image: postgres
    container_name: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - transcendance_net
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_PASSWORD}
      interval: 5s
      timeout: 5s
      retries: 3

  # Adminer for DB management
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - transcendance_net
    depends_on:
      - db

  # Frontend en Vue.js avec Vite
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - '3000:5173'  # Redirection du port 5173 (Vite) vers 3000 (localhost)
    environment:
      - NODE_ENV=development  # S'assurer qu'il est en mode développement
    volumes:
      - ./frontend:/app  # Volume pour synchroniser les fichiers du frontend
      - /app/node_modules  # Ne pas monter node_modules pour éviter les conflits
    networks:
      - transcendance_net
    depends_on:
      - db

  # Backend en Go
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: golang
    ports:
      - '4000:4000'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    networks:
      - transcendance_net
    depends_on:
      db:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - transcendance_net
    depends_on:
      - backend

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
     - /proc:/host/proc:ro
     - /sys:/host/sys:ro
     - /:/rootfs:ro
    command:
     - '--path.procfs=/host/proc'
     - '--path.rootfs=/rootfs'
     - '--path.sysfs=/host/sys'
     - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
     - 9100
    networks:
     - transcendance_net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/datasources:/etc/grafana/provisioning/datasources
    networks:
      - transcendance_net
    depends_on:
      - prometheus

volumes:
  db_data:
  grafana-data:

networks:
  transcendance_net:
    driver: bridge
